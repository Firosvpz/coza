const orderList = async (req, res) => {
    try {
        const id = req.session.user_id;
        const page = parseInt(req.query.page) || 1;
        const perPage = 3;

        // Count total number of orders
        const totalOrders = await Order.countDocuments({ user_id: id });

        // Calculate total pages
        const totalPages = Math.ceil(totalOrders / perPage);

        // Ensure the requested page is within valid range
        if (page < 1 || page > totalPages) {
            return res.status(404).render('error', { error: 'Page not found' });
        }

        // Sort the orders in descending order based on the date field and paginate the results
        const data = await Order.find({ user_id: id })
            .sort({ date: -1 })
            .populate('items.product_id')
            .skip((page - 1) * perPage)
            .limit(perPage);

        const user = await User.find({ _id: id });

        res.render('orderlist', { orders: data, user, moment, currentPage: page, totalPages });
    } catch (error) {
        console.log(error);
        // Handle errors as needed
        res.status(500).render('error', { error: 'Internal Server Error' });
    }
};


<div class="d-flex justify-content-center">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <% if(totalOrders> pageSize) { %>
                <% const totalPages=Math.ceil(totalOrders / pageSize); %>
                    <% for(let i=1; i <=totalPages; i++) { %>
                        <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>">
                                <%= i %>
                            </a>
                        </li>
                        <% } %>
                            <% } %>
        </ul>
    </nav>
</div>